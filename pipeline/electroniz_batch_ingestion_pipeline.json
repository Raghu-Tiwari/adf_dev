{
	"name": "electroniz_batch_ingestion_pipeline",
	"properties": {
		"description": "This pipeline will ingest data from sales\ndatabase, currency conversion, geo-location, and\necommerce website tracking",
		"activities": [
			{
				"name": "Get Secret",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "GET",
					"url": "https://trainingkv10011.vault.azure.net/secrets/CURRAPIKEY/c2f9060985094c2fadca1ea4941f4da7?api-version=7.5",
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "Get Geo-location Mapping",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Get Secret",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "HttpReadSettings",
							"requestMethod": "GET"
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "GeoDelimitedTextSource",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "GeoDelimitedTextSync",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Find SalesDB Tables",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Get Geo-location Mapping",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT QUOTENAME(table_schema)+'.'+QUOTENAME(table_name) AS Table_Name FROM information_Schema.tables\nWHERE table_name not in ('watermarktable', 'database_firewall_rules')",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "salesdbds",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "For Each Table",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Find SalesDB Tables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Find SalesDB Tables').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Lookup Old Watermark",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "SELECT * FROM [dbo].[watermarktable] AS\nWatermarkValue WHERE table_name='@{item().Table_Name}'",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "salesdbds",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "Lookup New Watermark",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "SELECT MAX(updated_at) as NewWatermarkvalue \nFROM @{item().Table_Name}",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "salesdbds",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "Copy Table Data",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Lookup Old Watermark",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "Lookup New Watermark",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "SELECT * FROM @{item().Table_Name} WHERE updated_at\n> '@{activity('Lookup Old Watermark').output.firstRow.\nwatermark_value}'",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "salesdbds",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "SalesDelimitedText",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Update Watermark",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy Table Data",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[usp_write_watermark]",
								"storedProcedureParameters": {
									"LastModifiedtime": {
										"value": {
											"value": "@{activity('Lookup New Watermark').output.firstRow.\nNewWatermarkvalue}",
											"type": "Expression"
										},
										"type": "Datetime"
									},
									"TableName": {
										"value": {
											"value": "@{activity('Lookup Old Watermark').output.firstRow.\ntable_name}:",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "salesdbsource",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			}
		],
		"folder": {
			"name": "Elec_Source1_RT"
		},
		"annotations": [],
		"lastPublishTime": "2024-09-27T22:24:44Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}